#define BUTTON_PIN  3       // Connect the button to GND and one of the pins. 
#define NUM_MODES 4         //Update this number to the highest number of "cases"
#define INIT_ADDR 1023  // номер резервной ячейки
#define INIT_KEY 0      // ключ первого запуска. 0-254, на выбор

//led strip settings
#define STRIP_PIN 8 //led pin
#define NUMLEDS 20 //leds count
#include <EEPROM.h>

#define COLOR_DEBTH 3
#include <microLED.h>   // lib connect
microLED<NUMLEDS, STRIP_PIN, MLED_NO_CLOCK, LED_WS2818, ORDER_GRB, CLI_AVER> strip;

byte ledMode = 0;

byte prevKeyState = HIGH;         // button is active low
float batteryIn;
//------------------SETUP------------------
void setup() {
  Serial.begin(9600);
  pinMode(BUTTON_PIN, INPUT_PULLUP);

  strip.setBrightness(250);
if (EEPROM.read(INIT_ADDR) != INIT_KEY) { // первый запуск
    EEPROM.write(INIT_ADDR, INIT_KEY);    // записали ключ
    // записали стандартное значение яркости
    // в данном случае это значение переменной, объявленное выше
    EEPROM.put(0, ledMode);
  }
  EEPROM.get(0, ledMode); // прочитали яркость
strip.clear();
battVoltage();
Serial.print("Current effect :");

        Serial.println(ledMode); 
strip.show(); // apply changes
delay(3000);
}


//------------------MAIN LOOP------------------
void loop() {

  byte currKeyState = digitalRead(BUTTON_PIN);

  if ((prevKeyState == LOW) && (currKeyState == HIGH)) {
    shortKeyPress();
  }
  prevKeyState = currKeyState;
  //ledMode=EEPROM.read(0);                   // Считать значение ячейки с адресом 0

  switch (ledMode) { //degub
       case 0: rainbow();  break;
       case 1: colorCycle();   break;
       case 2: colorCycle();  break;
       case 3: WigWag2();  break;
       case 4:runningDots();    break;
                   
  } 
}

//------------------Button Press Setup------------------
void shortKeyPress() {
  ledMode++;
    EEPROM.update(0, ledMode);           // записали
        Serial.print("Current effect :");

        Serial.println(ledMode); //

    if (ledMode >= NUM_MODES){
    ledMode=0; 
  }  
}
//Effects

void WigWag2() {
  for (int j = 0; j < 1; j++) { // The j<# determines how many cycles
    for (int i = 0; i < NUMLEDS; i = i + 1) {
      strip.set(i, mBlue);
    }
    for (int i = (NUMLEDS / 2); i < NUMLEDS; i = i + 1) {
      strip.set(i, mBlack);
    }
    strip.show();
    delay(100);

    for (int i = 0; i < NUMLEDS; i = i + 1) {
      strip.set(i, mBlack);
    }
    for (int i = (NUMLEDS / 2); i < NUMLEDS; i = i + 1) {
      strip.set(i, mRed);
    }
    strip.show();
    delay(100);
  }
}

void rainbow() {
  static byte counter = 0;
  for (int i = 0; i < NUMLEDS; i++) {
    strip.set(i, mWheel8(counter + i * 255 / NUMLEDS));   // counter смещает цвет
  }
  counter += 3;   // counter имеет тип byte и при достижении 255 сбросится в 0
  strip.show();
  delay(20);
}
void m4Shprot() {
  strip.fill(mMagenta);
  strip.show();         // выводим изменения
 breathing();
delay(30);


}
void breathing() {
  static int dir = 1;
  static int bright = 0;
  bright += dir * 2;    // 5 - множитель скорости изменения

  if (bright > 255) {
    bright = 255;
    dir = -1;
  }
  if (bright < 70) {
    bright = 70;
    dir = 1;
  }
  strip.setBrightness(bright);
  


}
void colorCycle() {
  static byte counter = 0;
  strip.fill(mWheel8(counter));
  counter += 2;
   strip.show();
  delay(40);
}
void runningDots() {
  static byte counter = 0;
  // перемотка буфера со сдвигом (иллюзия движения пикселей)
  for (int i = 0; i < NUMLEDS - 1; i++) strip.leds[i] = strip.leds[i + 1];

  // каждый третий вызов - последний пиксель красным, иначе чёрным
  if (counter % 3 == 0) strip.leds[NUMLEDS - 1] = mRed;
  else strip.leds[NUMLEDS - 1] = mBlack;
  counter++;
  delay(100);  
  strip.show();
}

//battery functions
void battVoltage(){
    batteryIn = analogRead(0); //read current voltage in a0 pin
    float battVoltage = batteryIn * 5.0 / 1023.0; 
    if(battVoltage >= 3.9 ){ //fill led green color if battery voltage > 3.9
      strip.fill(mGreen);
    } else if(battVoltage >= 3.5  && battVoltage <= 3.8 ) ////fill led yellow color if battery voltage > 3.5 and < 3.8
    {
      strip.fill(mYellow);
    } else{
      strip.fill(mRed); //else fill led red collor
    }
    //debug
    Serial.print("Battery voltage:");
    Serial.println(battVoltage); //
        

}
